version: 2
jobs:
  build:
    machine:
      - image: circleci/classic:edge
    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock "}}
            - gem-cache-{{ arch }}-{{ .Branch }}
            - gem-cache
      - run:
          name: bundle install
          command: bundle install --jobs=4 --retry=3
      - save_cache:
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - /usr/local/bundle
      - run:
          name: Rubocop
          command: bundle exec rubocop
  rspec:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: Decode dotenv file
          command: echo ${ENV} | base64 --decode > /home/circleci/project/.env
      - run:
          name: docker-compose build
          command: docker-compose build
      - restore_cache:
        keys:
          - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock "}}
          - gem-cache-{{ arch }}-{{ .Branch }}
          - gem-cache
      - run:
          name: bundle install
          command: docker-compose run web bundle install --jobs=4 --retry=3
      - save_cache:
        key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
        paths:
          - /usr/local/bundle
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 1
      - run:
          name: "before_test: setup db"
          command: docker-compose run web bin/rails db:create db:migrate
      - run:
          name: test
          command: docker-compose run web bin/rspec
      - run:
          name: docker-compose down
          command: docker-compose down
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: "build docker image"
          command: docker build --rm=false -t registry.heroku.com/${HEROKU_APP_NAME}/web .
      - run:
          name: setup heroku command
          command: bash .circleci/setup_heroku.sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          name: "push container to registry.heroku.com"
          command: |
            docker login --username=_ --password=${HEROKU_AUTH_TOKEN} registry.heroku.com
            docker push registry.heroku.com/${HEROKU_APP_NAME}/web
            bash .circleci/heroku-container-release.sh
      - run:
          name: heroku db migrate
          command: heroku run rails db:migrate --app ${HEROKU_APP_NAME}
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}
workflows:
  version: 2
  build_rspec_and_deploy:
    jobs:
      - build
      - rspec
      - deploy:
          requires:
            - build
            - rspec
          filters:
            branches:
              only: master
